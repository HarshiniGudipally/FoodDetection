# Read each food100 class image directory 'bb_info.txt' and create individual bbox files.
#
# This script creates 2 bounding box files for each food image:
# (1) The bounding box file that is saved along with the image in the same directory,
#     this allow to use bounding box editing tool. When the image re-edit,
#     it remembers the previous edited bounding boxes.
#

import os

# modify the directories and class file to fit
datapath = '/home/frcnn/data_generation/data/images'
classfilename = '/home/frcnn/data_generation/food.names'


def generate_bbox_file(datapath, classid, classname):
    dataDir = os.path.join(datapath, str(classid))
    bb_filename = os.path.join(dataDir, 'bb_info.txt')

    with open(bb_filename) as fp:
        for line in fp.readlines():
            # img_bbox file is [0:img] [1:left X] [2:bottom Y] [3:right X] [4:top Y]
            img_bbox = line.strip('\n').split(' ')
            if img_bbox[0] != 'img':
                img_bbox_filename = os.path.join(dataDir, img_bbox[0]+'.txt')
                with open(img_bbox_filename, 'w') as f:
                    # [number of bbox]
                    # [left X] [top Y] [right X] [bottom Y] [class name]
                    f.write('1\n')
                    f.write('%s %s %s %s %s\n' %(img_bbox[1], img_bbox[2],
                                                 img_bbox[3], img_bbox[4],
                                                 classname))
                    f.close()

        fp.close()

classid = 0
classid2name = {}
if os.path.exists(classfilename):
    with open(classfilename) as cf:
        for line in cf.readlines():
            classname = line.strip('\n')
            classid = classid + 1
            classid2name[classid] = classname

for id in classid2name.keys():
    print("generating %d %s" %(id, classid2name[id]))
    generate_bbox_file(datapath, id, classid2name[id])
